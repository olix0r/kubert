name: client

on:
  pull_request:
    paths:
      - '**/Cargo.toml'
      - '**/*.rs'
      - .github/workflows/client.yml

permissions:
  contents: read

env:
  CARGO_ACTION_FMT_VERSION: v0.1.3
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  K3D_VERSION: v5.3.0
  RUST_BACKTRACE: short
  RUST_VERSION: 1.56.1
  RUSTUP_MAX_RETRIES: 10

jobs:
  local:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      # Build the examples
      - name: Install rust
        run: |
          rm -rf $HOME/.cargo
          curl --proto =https --tlsv1.3 -fLsSv https://sh.rustup.rs | sh -s -- -y --default-toolchain=${RUST_VERSION}
          source $HOME/.cargo/env
          echo "PATH=$PATH" >> $GITHUB_ENV
          cargo version
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: cargo build --package=kubert-examples --examples
      # Setup a cluster
      - run: curl --proto =https --tlsv1.3 -fLsSv https://raw.githubusercontent.com/k3d-io/k3d/${K3D_VERSION}/install.sh | bash
      - run: k3d --version
      - run: k3d cluster create --no-lb --k3s-arg '--no-deploy=local-storage,traefik,servicelb,metrics-server@server:*'
      - run: kubectl version
      # Run the example locally
      - name: Run watch-pods
        run: |
          cargo run --package=kubert-examples --example=watch-pods -- \
              --exit \
              --log-level=debug
      - name: Setup RBAC
        run: |
          kubectl create namespace kubert-test
          kubectl create serviceaccount --namespace=kubert-test watch-pods
          kubectl create clusterrole watch-pods --verb=get,list,watch --resource=pods
          kubectl create clusterrolebinding watch-pods --clusterrole=watch-pods --serviceaccount=kubert-test:watch-pods
      - name: Run watch-pods with impersonation
        run: |
          cargo run --package=kubert-examples --example=watch-pods -- \
              --exit \
              --log-level=debug \
              --as=system:serviceaccount:kubert-test:watch-pods \
              --kubeconfig=$HOME/.kube/config

  in-cluster:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      # Setup a cluster
      - run: curl --proto =https --tlsv1.3 -fLsSv https://raw.githubusercontent.com/k3d-io/k3d/${K3D_VERSION}/install.sh | bash
      - run: k3d --version
      - run: k3d cluster create --no-lb --k3s-arg "--no-deploy=local-storage,traefik,servicelb,metrics-server@server:*"
      - run: kubectl version
      - name: Setup RBAC
        run: |
          kubectl create namespace kubert-test
          kubectl create serviceaccount --namespace=kubert-test watch-pods
          kubectl create clusterrole watch-pods --verb=get,list,watch --resource=pods
          kubectl create clusterrolebinding watch-pods --clusterrole=watch-pods --serviceaccount=kubert-test:watch-pods
      # Build a docker image with the examples
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6
      - run: docker buildx build . -f examples/Dockerfile --tag kubert-examples:test --load
      - run: k3d image import kubert-examples:test
      # Run the example in-cluster
      - name: Run kubectl run watch-pods
        run: |
          kubectl run watch-pods \
              --attach \
              --command \
              --image=kubert-examples:test \
              --image-pull-policy=Never \
              --labels=olix0r.net/kubert-test=watch-pods \
              --namespace=kubert-test \
              --overrides='{"spec": {"serviceAccount": "watch-pods"}}' \
              --quiet \
              --restart=Never \
              --rm \
              -- \
            watch-pods --exit --log-level=debug --selector=olix0r.net/kubert-test=watch-pods

